#!/bin/bash

# 何命令失败（退出状态非0），则脚本会终止执行
set -o errexit
# 尝试使用未设置值的变量，脚本将停止执行
set -o nounset

show_help() {
  # Define text formatting variables
  bold=$(tput bold)
  normal=$(tput sgr0)
  yellow=$(tput setaf 3)
  cyan=$(tput setaf 6)

  # Print the help message with echo
  echo "${bold}Choose one of the available commands:${normal}"

  echo "dbuilder source <command> <packages>:"
  echo "    ${cyan}get <packages>${normal}: download from debian.org (or mirrors.163.com)"
  echo "        ${yellow}example:${normal} dbuilder source get vim"
  echo "    ${cyan}deps <packages>${normal}: Download from debian.org (or mirrors.163.com) and list its dependencies"
  echo "        ${yellow}example:${normal} dbuilder source deps vim"
  echo "    ${cyan}pre <packages>${normal}: Download from debian.org (or mirrors.163.com) and prepare the source to submit to deepin"
  echo "        ${yellow}example:${normal} dbuilder source pre vim"

  echo "dbuilder hub <command> <packages>:"
  echo "    you need write your github id and token to config.json"
  echo "    ${cyan}fork <packages>${normal}: fork package from deepin-community"
  echo "        ${yellow}example:${normal} dbuilder hub fork vim"
  echo "    ${cyan}delete <packages>${normal}: delete package from your github"
  echo "        ${yellow}example:${normal} dbuilder hub delete vim"
  echo "    ${cyan}diff <packages>${normal}: diff package from deepin-community"
  echo "        ${yellow}example:${normal} dbuilder hub diff vim"
  echo "    ${cyan}diffm <packages>${normal}: diff source from my repo"
  echo "        ${yellow}example:${normal} dbuilder hub diffm vim"
}

# 没有添加参数时展示执行help,获取命令列表
if [ $# -eq 0 ]; then
    show_help
    exit
fi

# ${BASH_SOURCE[0]}：在非交互式shell中，特殊参数BASH_SOURCE表示当前正在执行的脚本的绝对路径名。在这里使用的是BASH_SOURCE[0]，表示第一个参数，即当前执行的脚本文件的位置。
# dirname ${BASH_SOURCE[0]}：返回给定路径中的目录部分，也就是返回脚本文件所在的目录。
# realpath --no-symlinks <dir>：命令realpath可以给出文件或目录的标准绝对路径名，并且符号连接也会被解析为它们指向的实际位置。
# 这里使用了--no-symlinks选项，使得不会跟随符号链接；<dir>的部分替换为上一步得到的目录名称。
# 获取当前执行的脚本文件所在的目录的真实路径名
export dbuilder_path="$(realpath --no-symlinks "$(dirname "${BASH_SOURCE[0]}")")"
export config_file="$dbuilder_path/config.json"
# 保存脚本的第一个参数
dbuilder_command="${1}"
# 向左移动参数，移除第一个参数
shift

case "${dbuilder_command}" in
    source)
        "${dbuilder_path}/dbuilder-source" "$@"
        ;;
    hub)
        "${dbuilder_path}/dbuilder-hub" "$@"
        ;;
    obs)
        "${dbuilder_path}/dbuilder-obs" "$@"
        ;;
    help | --help | -h)
        show_help
        exit 0
        ;;
    *)
        printf >&2 "Error: invalid command\n"
        show_help
        exit 1
esac
