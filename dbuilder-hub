#!/bin/bash

# 尝试使用未设置值的变量，脚本将停止执行
set -o nounset

github_id=""
token=""

init_config()
{
    github_id=$(jq -r ".github.id" $config_file)
    if [[ -z $github_id ]]; then
        echo "Github ID为，请输入数据: "
        read github_id
        tmp=$(mktemp)
        jq --indent 4 --arg github_id $github_id '.github.id=$github_id' $config_file > $tmp && mv $tmp $config_file
    fi

    if [ -e "/tmp/github_token" ]; then
        token=$(cat "/tmp/github_token")
    else
        echo "Github Token为空，请输入数据: "
        read token
        echo "$token" > /tmp/github_token
    fi
}

fork_repo()
{
    init_config
    url="https://api.github.com/repos/deepin-community/$2/forks"
    curl -X POST \
        -H "Authorization: token $token" \
        $url

}

diff_source()
{
    source dbuilder-source pre "${2}"

    repo_path="$psource_path/repo"
    source_path="$psource_path/${psource}"

    repo_url="git@github.com:$3/${psource}.git"
    # clone代码
    if [ ! -e "repo" ]; then
        git clone $repo_url $repo_path
    fi

    push_branch=$(jq -r ".github.push_branch" $config_file)
    if [[ -z $push_branch ]]; then
        echo "Github 仓库推送分支为空: "
        read push_branch
        tmp=$(mktemp)
        jq --indent 4 --arg push_branch $push_branch '.github.push_branch=$push_branch' $config_file > $tmp && mv $tmp $config_file
    fi
    cd $repo_path
    # 如果分支不存在就创建
    if ! git branch | grep -q $push_branch; then
        git branch $push_branch
    fi
    git switch $push_branch

    cp -r $repo_path/.{git,github} $source_path
    cp -r $repo_path/debian/deepin $source_path/debian
}

diff_source_from_my_repo()
{
    init_config
    source dbuilder-source get "${2}"
    fork_repo "" "$psource"

    diff_source "" "$2" "$github_id"
}


case "$1" in
    fork)
        fork_repo "$@"
        ;;
    diff)
        diff_source "$@"
        ;;
    diffm)
        diff_source_from_my_repo "$@"
        ;;
esac