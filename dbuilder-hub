#!/bin/bash

# 尝试使用未设置值的变量，脚本将停止执行
set -o nounset

config_file="dbuilder.conf"
github_id=""
token=""

init_config()
{
    github_id=$(grep '^GITHUB_ID=' "$config_file" | cut -d '=' -f2)

    if [ -z "$github_id" ]; then
        echo "Github ID为，请输入数据: "
        read github_id
        sed -i 's|^GITHUB_ID=.*|GITHUB_ID='"${github_id}"'|' "$config_file"
    fi

    if [ -e "/tmp/github_token" ]; then
        token=$(cat "/tmp/github_token")
    else
        echo "Github Token为空，请输入数据: "
        read token
        echo "$token" >> /tmp/github_token
    fi
}

fork_repo()
{
    init_config
    url="https://api.github.com/repos/deepin-community/$2/forks"
    curl -X POST \
        -H "Authorization: token $token" \
        $url

}

preproces()
{
    init_config
    source dbuilder-source get "${2}"

    save_source_path=$(grep '^SAVE_SOURCE_PATH=' "$config_file" | cut -d '=' -f2)
    current_path=$(pwd)

    # dsc存放的地址
    dsc_dir=$save_source_path/$psource
    cd $dsc_dir
    dsc_file=$(basename $(ls ${dsc_dir}/*.dsc))
    if [ ! -e "$psource" ]; then
        dpkg-source -x $dsc_file "$psource"
    fi
    cd $psource
    # 回退patch
    quilt pop -af
    #删除一些隐藏目录
    rm -rf .{pc,github,git}
    cd $current_path
    
    fork_repo "$@"

    cd $dsc_dir
    # clone代码
    repo_url="git@github.com:${github_id}/${psource}.git"
    if [ ! -e "repo" ]; then
        git clone $repo_url repo
    fi

    source_path="$dsc_dir/$psource"
    repo_path="$dsc_dir/repo"
    cp -r $repo_path/.{git,github} $source_path
    cp -r $repo_path/debian/deepin $source_path/debian
    cd $current_path
}

diff_source()
{
    current_path=$(pwd)
    save_source_path=$(grep '^SAVE_SOURCE_PATH=' "$config_file" | cut -d '=' -f2)

    dsc_dir=$save_source_path/$2
    
    # 创建文件夹
    [ ! -d $dsc_dir ] && mkdir -p $dsc_dir
    cd $dsc_dir

    dsc_file=$(basename $(ls ${dsc_dir}/*.dsc))
    if [ ! -e "$2" ]; then
        dpkg-source -x $dsc_file "$2"
    fi
    cd $2
    # 回退patch
    quilt pop -af
    #删除一些隐藏目录
    rm -rf .{pc,github,git}
    cd $current_path
    source_path="$dsc_dir/$2"

    cd $dsc_dir
    # clone代码
    if [ ! -e "repo" ]; then
        git clone "$3" repo
    fi
    repo_path="$dsc_dir/repo"
    cp -r $repo_path/.{git,github} $source_path
    cp -r $repo_path/debian/deepin $source_path/debian
    cd $current_path
}

case "$1" in
    fork)
        fork_repo "$@"
        ;;
    pre)
        preproces "$@"
        ;;
    diff)
        diff_source "$@"
        ;;
esac